#pragma OPENCL EXTENSION cl_khr_global_int32_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_local_int32_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_global_int32_extended_atomics : enable
#pragma OPENCL EXTENSION cl_khr_local_int32_extended_atomics : enable
#pragma OPENCL EXTENSION cl_khr_int64_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_int64_extended_atomics : enable

__kernel void Kernel(__global float *A, __global float *B,
		int N, __global float *C)
{
	int i_p;
	__local int i;
	i = 0;
	barrier(CLK_LOCAL_MEM_FENCE);
	while (i < N)
	{
		i_p = atomic_add(&i, 1);
		if (i_p < N)
		{
			C[i_p] = (A[i_p] + B[i_p]) / 2;
		}
	}
}